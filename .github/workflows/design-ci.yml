name: Design CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  ui-checks:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
    env:
      PREVIEW_URL: ${{ secrets.PREVIEW_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9


      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20


      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Lint JS/TS
        run: pnpm lint --silent

      - name: Lint CSS
        run: pnpm lint:css --silent || true

      - name: Start local server (fallback)
        if: env.PREVIEW_URL == ''
        run: |
          pnpm build
          nohup pnpm start >/dev/null 2>&1 &
          for i in {1..60}; do
            if curl -fsS http://localhost:3000 >/dev/null; then
              echo "Server is up"; break; fi; sleep 2; done
        shell: bash

      - name: Determine BASE_URL
        id: base
        run: |
          if [ -n "$PREVIEW_URL" ]; then echo "url=$PREVIEW_URL" >> $GITHUB_OUTPUT; else echo "url=http://localhost:3000" >> $GITHUB_OUTPUT; fi
        shell: bash

      - name: Lighthouse CI (homepage)
        run: npx lhci autorun --collect.url=${{ steps.base.outputs.url }} --upload.target=filesystem --outputDir=artifacts/lighthouse --collect.numberOfRuns=2 --assert.assertions.categories:performance=warn:0.8 --assert.assertions.categories:accessibility=warn:0.9
        env:
          NODE_OPTIONS: --max_old_space_size=4096

      - name: Crear carpeta snapshots y generar im√°genes
        run: |
          mkdir -p snapshots
          node scripts/snapshots.js true
        env:
          BASE_URL: ${{ steps.base.outputs.url }}

      - name: Publicar artefactos (screenshots)
        uses: actions/upload-artifact@v4
        with:
          name: snapshots
          path: snapshots/*.png
          if-no-files-found: warn
